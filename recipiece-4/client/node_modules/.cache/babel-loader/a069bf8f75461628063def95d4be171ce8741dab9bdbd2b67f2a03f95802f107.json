{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew\\\\Documents\\\\CIS4912\\\\recipiece-3\\\\client\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('userData');\n    if (storedUser) {\n      setIsAuthenticated(true);\n      fetch('http://localhost:5000/check-auth', {\n        credentials: 'include'\n      }).then(res => res.json()).then(data => {\n        if (data.user) {\n          setUser(data.user);\n        }\n      }).catch(err => {\n        console.error('Failed to fetch user info:', err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = userData => {\n    localStorage.setItem('userData', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    fetch('http://localhost:5000/check-auth', {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.user) {\n        setUser(data.user);\n      } else {\n        setUser(userData);\n      }\n    }).catch(err => {\n      console.error('Failed to fetch full user data after login:', err);\n      setUser(userData);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      user,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","storedUser","localStorage","getItem","fetch","credentials","then","res","json","data","catch","err","console","error","finally","login","userData","setItem","JSON","stringify","Provider","value","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Matthew/Documents/CIS4912/recipiece-3/client/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('userData');\r\n  \r\n    if (storedUser) {\r\n      setIsAuthenticated(true);\r\n  \r\n      fetch('http://localhost:5000/check-auth', {\r\n        credentials: 'include',\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.user) {\r\n            setUser(data.user);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('Failed to fetch user info:', err);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    localStorage.setItem('userData', JSON.stringify(userData));\r\n    setIsAuthenticated(true);\r\n  \r\n    \r\n    fetch('http://localhost:5000/check-auth', {\r\n      credentials: 'include',\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.user) {\r\n          setUser(data.user);\r\n        } else {\r\n          setUser(userData);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to fetch full user data after login:', err);\r\n        setUser(userData);\r\n      });\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, user, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEnD,IAAIF,UAAU,EAAE;MACdL,kBAAkB,CAAC,IAAI,CAAC;MAExBQ,KAAK,CAAC,kCAAkC,EAAE;QACxCC,WAAW,EAAE;MACf,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACZ,IAAI,EAAE;UACbC,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD,CAAC,CAAC,CACDG,OAAO,CAAC,MAAM;QACbd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,KAAK,GAAIC,QAAQ,IAAK;IAC1Bd,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;IAC1DpB,kBAAkB,CAAC,IAAI,CAAC;IAGxBQ,KAAK,CAAC,kCAAkC,EAAE;MACxCC,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACZ,IAAI,EAAE;QACbC,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;MACpB,CAAC,MAAM;QACLC,OAAO,CAACkB,QAAQ,CAAC;MACnB;IACF,CAAC,CAAC,CACDN,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,6CAA6C,EAAEF,GAAG,CAAC;MACjEb,OAAO,CAACkB,QAAQ,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EACD,oBACE1B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,eAAe;MAAEoB,KAAK;MAAEO,MAAM;MAAEzB,IAAI;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAC5EA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAzDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}